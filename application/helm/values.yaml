---
image: &container_image
  repository: nginx
  tag: latest
  pullPolicy: IfNotPresent

# Apps
web1:
  containerImage: *container_image
  applicationName: "s1"
  replicaCount: 3
  livenessProbe:
    httpGet:
      path: /up
      port: http
  readinessProbe:
    httpGet:
      path: /up
      port: http
  service:
    type: NodePort
  podAnnotations:
    vault.hashicorp.com/agent-inject: "true"
    vault.hashicorp.com/agent-inject-status: "update"
    vault.hashicorp.com/role: "internal-app"
    vault.hashicorp.com/agent-inject-secret-database-config: "internal/data/database/config"
    vault.hashicorp.com/agent-inject-template-database-config.txt: |
      {{- with secret "internal/data/database/config" -}}
      postgresql://{{ .Data.data.username }}:{{ .Data.data.password }}@postgres:5432/wizard
      {{- end -}}
  serviceAccount:
    name: "internal-app"
  secrets:
    sample-store-key:
      as: environment
      items:
        SECRET_KEY_BASE:
          envVarName: SECRET_KEY_BASE
web2:
  containerImage: *container_image
  applicationName: "s2"
  replicaCount: 3
  livenessProbe:
    httpGet:
      path: /up
      port: http
  readinessProbe:
    httpGet:
      path: /up
      port: http
  service:
    type: NodePort
  secrets:
    sample-store-key:
      as: environment
      items:
        SECRET_KEY_BASE:
          envVarName: SECRET_KEY_BASE
